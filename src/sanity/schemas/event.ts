import { defineField, defineType } from 'sanity'
import { CalendarIcon } from '@sanity/icons'

export default defineType({
  name: 'event',
  title: 'Event',
  type: 'document',
  icon: CalendarIcon,
  fields: [
    defineField({
      name: 'title',
      title: '–ó–∞–≥–ª–∞–≤–∏–µ –Ω–∞ —Å—ä–±–∏—Ç–∏–µ—Ç–æ',
      type: 'string',
      validation: Rule => Rule.required().max(100)
    }),
    defineField({
      name: 'slug',
      title: 'Slug',
      type: 'slug',
      options: {
        source: 'title',
        maxLength: 96,
        slugify: input => input
          .toLowerCase()
          .replace(/\s+/g, '-')
          .replace(/[^\w-]+/g, '')
          .slice(0, 96)
      },
      validation: Rule => Rule.required()
    }),
    defineField({
      name: 'description',
      title: '–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—Å–∞–Ω–∏–µ',
      type: 'text',
      rows: 4,
      validation: Rule => Rule.required().max(300),
      description: '–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞ —Å–ø–∏—Å—ä—Ü–∏ –∏ –ø—Ä–µ–≥–ª–µ–¥–∏'
    }),
    defineField({
      name: 'content',
      title: '–ü–æ–¥—Ä–æ–±–Ω–æ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ',
      type: 'array',
      of: [
        {
          type: 'block',
          styles: [
            { title: 'Normal', value: 'normal' },
            { title: 'H2', value: 'h2' },
            { title: 'H3', value: 'h3' },
            { title: 'H4', value: 'h4' },
            { title: 'Quote', value: 'blockquote' },
          ],
          marks: {
            decorators: [
              { title: 'Strong', value: 'strong' },
              { title: 'Emphasis', value: 'em' },
            ],
          },
          lists: [
            { title: 'Bullet', value: 'bullet' },
            { title: 'Numbered', value: 'number' },
          ],
        },
        {
          type: 'image',
          options: { 
            hotspot: true,
            metadata: ['blurhash', 'lqip']
          },
          fields: [
            {
              name: 'alt',
              type: 'string',
              title: 'Alt text',
              validation: Rule => Rule.required()
            },
            {
              name: 'caption',
              type: 'string',
              title: 'Caption'
            }
          ]
        },
        {
          type: 'object',
          name: 'schedule',
          title: '–ü—Ä–æ–≥—Ä–∞–º–∞',
          fields: [
            {
              name: 'title',
              title: '–ó–∞–≥–ª–∞–≤–∏–µ –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞—Ç–∞',
              type: 'string'
            },
            {
              name: 'items',
              title: '–ï–ª–µ–º–µ–Ω—Ç–∏ –æ—Ç –ø—Ä–æ–≥—Ä–∞–º–∞—Ç–∞',
              type: 'array',
              of: [
                {
                  type: 'object',
                  fields: [
                    {
                      name: 'time',
                      title: '–í—Ä–µ–º–µ',
                      type: 'string'
                    },
                    {
                      name: 'activity',
                      title: '–î–µ–π–Ω–æ—Å—Ç',
                      type: 'string'
                    },
                    {
                      name: 'description',
                      title: '–û–ø–∏—Å–∞–Ω–∏–µ',
                      type: 'text',
                      rows: 2
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      description: '–ü–æ–¥—Ä–æ–±–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ —Å—ä–±–∏—Ç–∏–µ—Ç–æ, —É—á–µ–±–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞ –∏ –≥—Ä–∞—Ñ–∏–∫'
    }),
    defineField({
      name: 'image',
      title: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —Å—ä–±–∏—Ç–∏–µ—Ç–æ',
      type: 'image',
      options: {
        hotspot: true,
        metadata: ['blurhash', 'lqip']
      },
      fields: [
        {
          name: 'alt',
          type: 'string',
          title: 'Alt text'
        }
      ]
    }),
    
    // Date and Time
    defineField({
      name: 'startDate',
      title: '–ù–∞—á–∞–ª–Ω–∞ –¥–∞—Ç–∞',
      type: 'date',
      validation: Rule => Rule.required()
    }),
    defineField({
      name: 'endDate',
      title: '–ö—Ä–∞–π–Ω–∞ –¥–∞—Ç–∞',
      type: 'date',
      description: '–û—Å—Ç–∞–≤–∏ –ø—Ä–∞–∑–Ω–æ –∑–∞ –µ–¥–Ω–æ–¥–Ω–µ–≤–Ω–∏ —Å—ä–±–∏—Ç–∏—è'
    }),
    defineField({
      name: 'startTime',
      title: '–ù–∞—á–∞–ª–µ–Ω —á–∞—Å',
      type: 'string',
      validation: Rule => Rule.required().regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/, {
        name: 'time',
        invert: false
      }),
      placeholder: 'HH:MM (–Ω–∞–ø—Ä. 09:00)'
    }),
    defineField({
      name: 'endTime',
      title: '–ö—Ä–∞–µ–Ω —á–∞—Å',
      type: 'string',
      validation: Rule => Rule.regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/, {
        name: 'time',
        invert: false
      }),
      placeholder: 'HH:MM (–Ω–∞–ø—Ä. 17:00)'
    }),
    defineField({
      name: 'duration',
      title: '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ—Å—Ç—Ç–∞',
      type: 'string',
      description: '–Ω–∞–ø—Ä. "2 —á–∞—Å–∞", "3 —É–∏–∫–µ–Ω–¥–∞", "60 —á–∞—Å–∞ –æ–±—â–æ"',
      placeholder: '–Ω–∞–ø—Ä. 2 —á–∞—Å–∞, 3 —É–∏–∫–µ–Ω–¥–∞, 60 —á–∞—Å–∞ –æ–±—â–æ'
    }),
    
    // Pricing
    defineField({
      name: 'price',
      title: '–†–µ–¥–æ–≤–Ω–∞ —Ü–µ–Ω–∞ (–ª–≤.)',
      type: 'number',
      validation: Rule => Rule.required().min(0)
    }),
    defineField({
      name: 'discountPrice',
      title: '–†–∞–Ω–Ω–∞ –ø—Ç–∏—á–∫–∞ / –ù–∞–º–∞–ª–µ–Ω–∞ —Ü–µ–Ω–∞ (–ª–≤.)',
      type: 'number',
      validation: Rule => Rule.min(0)
    }),
    defineField({
      name: 'discountDeadline',
      title: '–ö—Ä–∞–µ–Ω —Å—Ä–æ–∫ –∑–∞ –æ—Ç—Å—Ç—ä–ø–∫–∞',
      type: 'date',
      description: '–î–æ –∫–æ–≥–∞ –≤–∞–∂–∏ –Ω–∞–º–∞–ª–µ–Ω–∞—Ç–∞ —Ü–µ–Ω–∞',
      hidden: ({ document }) => !document?.discountPrice
    }),
    
    // Location
    defineField({
      name: 'location',
      title: '–¢–∏–ø –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ',
      type: 'string',
      options: {
        list: [
          { title: 'üíª –û–Ω–ª–∞–π–Ω (Zoom)', value: 'online' },
          { title: 'üè¢ –ë—É—Ä–≥–∞—Å', value: 'burgas' },
          { title: 'üèõÔ∏è –ü–ª–æ–≤–¥–∏–≤', value: 'plovdiv' },
          { title: 'üèôÔ∏è –°–æ—Ñ–∏—è', value: 'sofia' },
          { title: 'üìç –î—Ä—É–≥–æ', value: 'other' },
        ],
      },
      validation: Rule => Rule.required(),
      initialValue: 'burgas'
    }),
    defineField({
      name: 'locationDetails',
      title: '–î–µ—Ç–∞–π–ª–∏ –∑–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ—Ç–æ',
      type: 'object',
      fields: [
        {
          name: 'venue',
          title: '–ò–º–µ –Ω–∞ –º—è—Å—Ç–æ—Ç–æ',
          type: 'string'
        },
        {
          name: 'address',
          title: '–ê–¥—Ä–µ—Å',
          type: 'text',
          rows: 2
        },
        {
          name: 'instructions',
          title: '–°–ø–µ—Ü–∏–∞–ª–Ω–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',
          type: 'text',
          rows: 3,
          description: '–ü–∞—Ä–∫–∏—Ä–∞–Ω–µ, –¥–æ—Å—Ç—ä–ø –¥–æ —Å–≥—Ä–∞–¥–∞—Ç–∞ –∏ –¥—Ä.'
        },
        {
          name: 'mapUrl',
          title: 'Google Maps URL',
          type: 'url'
        }
      ]
    }),
    
    // Event Details
    defineField({
      name: 'eventType',
      title: '–¢–∏–ø —Å—ä–±–∏—Ç–∏–µ',
      type: 'string',
      options: {
        list: [
          { title: 'üìö –°–µ–º–∏–Ω–∞—Ä', value: 'seminar' },
          { title: 'üõ†Ô∏è –†–∞–±–æ—Ç–∏–ª–Ω–∏—Ü–∞', value: 'workshop' },
          { title: 'üìñ –ö—É—Ä—Å', value: 'course' },
          { title: 'üíª –£–µ–±–∏–Ω–∞—Ä', value: 'webinar' },
          { title: 'üéØ –ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è', value: 'conference' },
          { title: 'üë• –ì—Ä—É–ø–æ–≤–∞ —Ç–µ—Ä–∞–ø–∏—è', value: 'group-therapy' },
        ],
      },
      validation: Rule => Rule.required(),
      initialValue: 'seminar'
    }),
    defineField({
      name: 'capacity',
      title: '–ú–∞–∫—Å–∏–º–∞–ª–µ–Ω –±—Ä–æ–π —É—á–∞—Å—Ç–Ω–∏—Ü–∏',
      type: 'number',
      validation: Rule => Rule.min(1).max(100),
      description: '–û—Å—Ç–∞–≤–∏ –ø—Ä–∞–∑–Ω–æ –∑–∞ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω –∫–∞–ø–∞—Ü–∏—Ç–µ—Ç'
    }),
    defineField({
      name: 'currentRegistrations',
      title: '–¢–µ–∫—É—â–∏ –∑–∞–ø–∏—Å–≤–∞–Ω–∏—è',
      type: 'number',
      validation: Rule => Rule.min(0),
      initialValue: 0,
      description: '–°–ª–µ–¥–∏ –∑–∞–ø–∏—Å–≤–∞–Ω–∏—è—Ç–∞'
    }),
    
    // Target Audience
    defineField({
      name: 'targetAudience',
      title: '–¶–µ–ª–µ–≤–∞ –∞—É–¥–∏—Ç–æ—Ä–∏—è',
      type: 'array',
      of: [{ type: 'string' }],
      options: {
        list: [
          { title: 'üéì –°—Ç—É–¥–µ–Ω—Ç–∏ –ø–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—è', value: 'students' },
          { title: 'üß† –ü—Ä–∞–∫—Ç–∏–∫—É–≤–∞—â–∏ –ø—Å–∏—Ö–æ–ª–æ–∑–∏', value: 'psychologists' },
          { title: 'üíº –ü—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∏', value: 'psychotherapists' },
          { title: 'üë• –®–∏—Ä–æ–∫–∞ –ø—É–±–ª–∏–∫–∞', value: 'general' },
          { title: 'üè• –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏ –ø—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–∏—Å—Ç–∏', value: 'medical' },
          { title: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°–µ–º–µ–π—Å—Ç–≤–∞', value: 'families' },
          { title: 'üë©‚Äçüè´ –ü–µ–¥–∞–≥–æ–∑–∏', value: 'educators' },
          { title: 'üíº HR –ø—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–∏—Å—Ç–∏', value: 'hr' },
        ],
      },
      validation: Rule => Rule.required().min(1)
    }),
    
    // Certification
    defineField({
      name: 'certificate',
      title: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç',
      type: 'object',
      fields: [
        {
          name: 'provided',
          title: '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—è —Å–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç',
          type: 'boolean',
          initialValue: false
        },
        {
          name: 'type',
          title: '–¢–∏–ø —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç',
          type: 'string',
          options: {
            list: [
              { title: '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∑–∞ –ø—Ä–∏—Å—ä—Å—Ç–≤–∏–µ', value: 'attendance' },
              { title: '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∑–∞ –∑–∞–≤—ä—Ä—à–≤–∞–Ω–µ', value: 'completion' },
              { title: '–ü—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–µ–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç', value: 'professional' },
              { title: '–ï–≤—Ä–æ–ø–µ–π—Å–∫–∏ –ø—Ä–∏–∑–Ω–∞—Ç', value: 'european' },
            ]
          },
          hidden: ({ parent }) => !parent?.provided
        },
        {
          name: 'hours',
          title: '–ß–∞—Å–æ–≤–µ –æ–±—É—á–µ–Ω–∏–µ',
          type: 'number',
          hidden: ({ parent }) => !parent?.provided
        },
        {
          name: 'issuingOrganization',
          title: '–ò–∑–¥–∞–≤–∞—â–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è',
          type: 'string',
          hidden: ({ parent }) => !parent?.provided
        }
      ]
    }),
    
    // Status and Organization
    defineField({
      name: 'status',
      title: '–°—Ç–∞—Ç—É—Å –Ω–∞ —Å—ä–±–∏—Ç–∏–µ—Ç–æ',
      type: 'string',
      options: {
        list: [
          { title: 'üìÖ –ü—Ä–µ–¥—Å—Ç–æ—è—â–æ', value: 'upcoming' },
          { title: '‚úÖ –ó–∞–ø–∏—Å–≤–∞–Ω–µ—Ç–æ –µ –æ—Ç–≤–æ—Ä–µ–Ω–æ', value: 'open' },
          { title: 'üîí –ó–∞–ø–∏—Å–≤–∞–Ω–µ—Ç–æ –µ –∑–∞—Ç–≤–æ—Ä–µ–Ω–æ', value: 'closed' },
          { title: '‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ', value: 'cancelled' },
          { title: '‚úÖ –ó–∞–≤—ä—Ä—à–µ–Ω–æ', value: 'completed' },
          { title: '‚è≥ –í —Ö–æ–¥', value: 'in-progress' },
        ],
      },
      initialValue: 'upcoming',
      validation: Rule => Rule.required()
    }),
    defineField({
      name: 'featured',
      title: '–ü—Ä–µ–ø–æ—Ä—ä—á–∞–Ω–æ —Å—ä–±–∏—Ç–∏–µ',
      type: 'boolean',
      description: '–ü—Ä–µ–ø–æ—Ä—ä—á–∞–Ω–∏—Ç–µ —Å—ä–±–∏—Ç–∏—è —Å–µ –ø–æ–∫–∞–∑–≤–∞—Ç –Ω–∞ –Ω–∞—á–∞–ª–Ω–∞—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞',
      initialValue: false
    }),
    defineField({
      name: 'tags',
      title: '–¢–∞–≥–æ–≤–µ',
      type: 'array',
      of: [{ type: 'string' }],
      options: {
        layout: 'tags'
      }
    })
  ],
  preview: {
    select: {
      title: 'title',
      startDate: 'startDate',
      eventType: 'eventType',
      status: 'status',
      media: 'image',
      featured: 'featured'
    },
    prepare({ title, startDate, eventType, status, media, featured }) {
      const statusIcons = {
        upcoming: 'üìÖ',
        open: '‚úÖ',
        closed: 'üîí', 
        cancelled: '‚ùå',
        completed: '‚úÖ',
        'in-progress': '‚è≥'
      }
      
      const typeIcons = {
        seminar: 'üìö',
        workshop: 'üõ†Ô∏è',
        course: 'üìñ',
        webinar: 'üíª',
        conference: 'üéØ',
        'group-therapy': 'üë•'
      }
      
      const formattedDate = startDate ? new Date(startDate).toLocaleDateString('bg-BG') : '–ë–µ–∑ –¥–∞—Ç–∞'
      
      return {
        title: title,
        subtitle: `${formattedDate} ‚Ä¢ ${typeIcons[eventType as keyof typeof typeIcons] || ''} ${eventType} ‚Ä¢ ${statusIcons[status as keyof typeof statusIcons] || ''} ${status}${featured ? ' ‚Ä¢ ‚≠ê' : ''}`,
        media: media
      }
    }
  },
  orderings: [
    {
      title: '–î–∞—Ç–∞ –Ω–∞ —Å—ä–±–∏—Ç–∏–µ—Ç–æ, –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏ –ø—ä—Ä–≤–æ',
      name: 'dateAsc',
      by: [{ field: 'startDate', direction: 'asc' }]
    },
    {
      title: '–î–∞—Ç–∞ –Ω–∞ —Å—ä–±–∏—Ç–∏–µ—Ç–æ, —Å–∫–æ—Ä–æ—à–Ω–∏ –ø—ä—Ä–≤–æ',
      name: 'dateDesc',
      by: [{ field: 'startDate', direction: 'desc' }]
    },
    {
      title: '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø–æ —Å—Ç–∞—Ç—É—Å',
      name: 'statusPriority',
      by: [
        { field: 'status', direction: 'asc' },
        { field: 'startDate', direction: 'asc' }
      ]
    }
  ]
})